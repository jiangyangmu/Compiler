C Lexer

=============== Lex ===============

token       := <id> | <keyword> | <const> | <string> | <operator> | <punc>

<keyword>   := auto double int struct
               break else long switch
               case enum register typedef
               char extern return union
               const float short unsigned
               continue for signed void
               default goto sizeof volatile
               do if static while

<id>        := [_a-zA-Z][_0-9a-zA-Z]*

<const>     := <int-const> | <char-const> | <float-const> | <enum-const>
<int-const> :=
<char-const>:= '<c-char>'
<float-const>:=
<enum-const>:=

<string>    := '<c-char>*'

<operator>  := ..............
<float-const>:=
<enum-const>:=
<addr-op>   := '.' | '->'
<sizeof-op> := 'sizeof'
<inc-op>    := '++'
<dec-op>    := '--'
<bit-op>    := '&' | '|' | '^' | '~' | '<<' | '>>'
<bool-op>   := '&&' | '||' | '!'
<assign-op> := '=' | '+=' | '-=' | '*=' | '/=' | '%=' | '<<=' | '>>=' | '&=' | '^=' | '|='
<arith-op>  := '+' | '-' | '*' | '/' | '%'
<rel-op>    := '<' | '>' | '<=' | '>=' | '==' | '!='
<cond-op>   := '?' | ':'
<comma-op>  := ','

<punc>      := '(' | ')' | '[' | ']' | '{' | '}' | ';' | '...'
